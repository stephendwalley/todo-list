// Todo list - BASIC REQUIREMENTS
// To do items
    // Title, Description , Due Date, Priority, Notes, Checklist
    // todo items can be edited
// Projects
    // These contain the to do items which can be placed inside
    // Default project where todo list items are intiially placed unless selected by user. 
    // projects can be created by user
// DOM related stuff
    // seperate module to the functionality of the app
// User interface
    // view all projects
    // view all todos
    // Expanding a todo item to see and edits its details further
    // delete a todo item
// Local storage saves all data between sessions

// Note: Can use date-fns for formatting and manipulating dates and times at a later date;


// THINGS TO FIX AND/OR ADD TO THE PROJECT

// Make it check if there is scheduled date: if scheduled display date, if not then display button to schedule task (displayProject.js)
// Find a way to reload the project list page after closing modal (displayTodoItem.js)
// If trying to either close module or open up another edit for a different quality, and another module is already open for editing 
   without having saved or cancelled, check with user to confirm whether they want to save changes or delete. (displayTodoItem.js)

// Use local storage to update all information: have to do a similar from data method to create new instances of each object when parseing;

// add date-fns to organise dates by date due etc;


// save current project by highlighting project list project with a tag of currentProject and giving a basic css change. Thus, when refreshing the page after editing,
// function can be run to get current project and call displayProject(currentProject);

// fix undefined display when no todo info; fix todo display to show titles of each topic; and css to make input boxes match website style